{
  "finding_id": "FINDING_001",
  "title": "Vulnerability Title Here",
  "category": "deception|reward_hacking|sabotage|tool_misuse|data_exfiltration|sandbagging|evaluation_awareness|cot_issues|hidden_motivations",
  "discovery_date": "2025-01-XX",
  "discoverer": "Team/Individual Name",
  
  "severity_assessment": {
    "self_assessed_severity": 5,
    "self_assessed_breadth": 3,
    "justification": "Brief justification for the severity and breadth scores"
  },
  
  "description": {
    "summary": "Brief description of the vulnerability in 1-2 sentences",
    "detailed_description": "Comprehensive description of the vulnerability, how it manifests, and why it's concerning",
    "technical_details": "Technical explanation of the underlying mechanism"
  },
  
  "reproduction": {
    "prompts": [
      "Primary prompt that triggers the vulnerability",
      "Alternative prompts that also trigger it",
      "Context or setup prompts if needed"
    ],
    "expected_outputs": [
      "Example of problematic output 1",
      "Example of problematic output 2"
    ],
    "reproduction_steps": [
      "Step 1: Setup the model with specific conditions",
      "Step 2: Present the triggering prompt",
      "Step 3: Observe the problematic behavior",
      "Step 4: Verify consistency across multiple attempts"
    ],
    "success_rate": "X% success rate across Y trials",
    "environmental_factors": "Any specific conditions needed for reproduction"
  },
  
  "analysis": {
    "root_cause": "Analysis of why this vulnerability exists",
    "failure_mode": "Type of failure (alignment, capability, training, etc.)",
    "consistency": "How consistently the vulnerability can be triggered",
    "variations": "Different ways the vulnerability can manifest"
  },
  
  "impact_assessment": {
    "potential_harms": [
      "Specific type of harm 1",
      "Specific type of harm 2"
    ],
    "affected_users": "Description of who might be affected",
    "attack_scenarios": [
      "Realistic scenario 1 where this could be exploited",
      "Realistic scenario 2 where this could be exploited"
    ],
    "real_world_implications": "How this might impact real-world deployments"
  },
  
  "methodology": {
    "discovery_approach": "How this vulnerability was discovered",
    "tools_used": ["Tool 1", "Tool 2"],
    "testing_methodology": "Systematic approach used for testing",
    "validation_process": "How the finding was validated"
  },
  
  "evidence": {
    "example_interactions": [
      {
        "prompt": "Exact prompt used",
        "response": "Exact problematic response",
        "timestamp": "2025-01-XX HH:MM:SS",
        "metadata": {
          "temperature": 0.7,
          "model_version": "gpt-oss-20b",
          "attempt_number": 1
        }
      }
    ],
    "supporting_data": {
      "statistical_analysis": "Any quantitative analysis performed",
      "comparative_results": "Comparison with other models or configurations",
      "additional_evidence": "Any other supporting evidence"
    }
  },
  
  "mitigation": {
    "proposed_fixes": [
      "Potential mitigation strategy 1",
      "Potential mitigation strategy 2"
    ],
    "workarounds": [
      "Immediate workaround 1",
      "Immediate workaround 2"
    ],
    "prevention_strategies": "How to prevent similar vulnerabilities",
    "detection_methods": "How to detect this vulnerability in the future"
  },
  
  "related_work": {
    "similar_vulnerabilities": "References to similar known vulnerabilities",
    "academic_references": ["Paper 1", "Paper 2"],
    "benchmark_relevance": "How this relates to existing safety benchmarks"
  },
  
  "metadata": {
    "submission_timestamp": "2025-01-XX HH:MM:SS UTC",
    "last_updated": "2025-01-XX HH:MM:SS UTC",
    "version": "1.0",
    "tags": ["tag1", "tag2", "tag3"],
    "confidence_level": "high|medium|low",
    "validation_status": "validated|pending|disputed",
    "public_disclosure": "approved|pending|restricted"
  },
  
  "attachments": {
    "reproduction_notebook": "path/to/reproduction_notebook.ipynb",
    "test_harness": "path/to/automated_test.py",
    "data_files": ["path/to/data1.json", "path/to/data2.csv"],
    "documentation": "path/to/additional_docs.md"
  }
}
